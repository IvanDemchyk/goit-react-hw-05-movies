{"version":3,"file":"static/js/356.36064a6d.chunk.js","mappings":"+RAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iVAmBRE,EAAQF,EAAAA,GAAAA,GAAH,qMAWLG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yP,SCoCrB,EA9DkB,WAAO,IAAD,IACtB,GAA0BK,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAClCC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRR,GAAa,GACb,IAAMS,EAAU,mCAAG,8GAEMC,EAAAA,EAAAA,IAAgBJ,GAFtB,OAETK,EAFS,OAGff,EAASe,GAHM,gDAKfb,EAAS,EAAD,IALO,yBAOfE,GAAa,GAPE,4EAAH,qDAUhBS,GACD,GAAE,CAACH,IAIJ,OACE,UAAC,KAAD,YACE,SAAClB,EAAD,CAAUwB,GAAIT,EAAd,kBACCR,IAAS,SAACJ,EAAD,UAAQI,EAAMkB,QACvBd,GAAa,aACbF,IAAS,yBAAMA,IACfF,IACC,4BACE,gBACEmB,IAAG,0CAAqCnB,EAAMoB,aAC9CC,IAAKrB,EAAMkB,SAEb,wBAAKlB,EAAMsB,kBACX,6BAfkB,IAAIC,KAAKvB,EAAMwB,cAAcC,cAe/C,QACA,wCAAgBzB,EAAM0B,eACtB,4BACE,sCACA,uBAAI1B,EAAM2B,kBAIhB,mBACA,4BACE,oDACA,SAAC9B,EAAD,CAAUoB,GAAE,kBAAaN,EAAb,SAA6BF,MAAOH,EAASG,MAAzD,mBAGA,SAACZ,EAAD,CAAUoB,GAAE,kBAAaN,EAAb,YAAgCF,MAAOH,EAASG,MAA5D,sBAGA,mBACA,SAAC,KAAD,SAIP,C,8LCjEKmB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACAH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADA,cACjBC,EADiB,yBAIhBA,EAASC,KAAKC,SAJE,2CAAH,qDAOTpB,EAAe,mCAAG,WAAMqB,GAAN,uFACNP,EAAAA,EAAAA,IAAA,UAClBC,EADkB,YACSM,EADT,oBACuBR,EADvB,oBADM,cACvBK,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAY,mCAAG,WAAMD,GAAN,uFACHP,EAAAA,EAAAA,IAAA,iBACXO,GADW,OACNN,EADM,oBAC6BF,EAD7B,oBADG,cACpBK,EADoB,yBAInBA,EAASC,KAAKI,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAOH,GAAP,4FAAWJ,EAAX,+BAAkB,EAAlB,SACNH,EAAAA,EAAAA,IAAA,iBACXO,GADW,OACNN,EADM,oBAC6BF,EAD7B,gCAC4DI,IAFtD,cACvBC,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfK,EAAc,mCAAG,WAAOC,GAAP,4FAAcT,EAAd,+BAAqB,EAArB,SACLH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACgBF,EADhB,iBACgCI,EADhC,kBAC8CS,EAD9C,wCADK,cACtBR,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qD","sources":["components/MovieDetails/MovieDetail.syled.js","components/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  color: #2a363b;\n  font-size: 25px;\n  font-weight: 500;\n  display: inline-block;\n  border-radius: 8px;\n  border: 2px solid #2a363b;\n  width: 80px;\n  text-align: center;\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    color: #2196f3;\n    border: 2px solid #2196f3;\n  }\n`;\n\nexport const Title = styled.h1`\n  padding: 8px;\n  margin-top: 0;\n  border-radius: 8px;\n  color: #02121beb;\n  font-size: 40px;\n  font-weight: 500;\n  text-align: center;\n  background-color: #2caf51;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 500;\n  color: #2a363b;\n  font-size: 20px;\n\n  &:hover,\n  &:focus {\n    color: #2196f3;\n  }\n\n  &.active {\n    color: #1ff767;\n  }\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'services/movies-api';\n\nimport { Container } from 'components/Layout/Layout.styled';\nimport { Title, BackLink, InfoLink } from './MovieDetail.syled';\n\nconst MovieCard = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLink = location?.state?.from ?? '/';\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovie = async () => {\n      try {\n        const result = await getMovieDetails(movieId);\n        setMovie(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const releaseYear = () => new Date(movie.release_date).getFullYear();\n\n  return (\n    <Container>\n      <BackLink to={backLink}>Back</BackLink>\n      {movie && <Title>{movie.title}</Title>}\n      {isLoading && 'Loading...'}\n      {error && <div>{error}</div>}\n      {movie && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <h3>{movie.original_title}</h3>\n          <p>({releaseYear()})</p>\n          <p>User score: {movie.popularity}</p>\n          <div>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div>\n        <h2>Additional information</h2>\n        <InfoLink to={`/movies/${movieId}/cast`} state={location.state}>\n          Cast\n        </InfoLink>\n        <InfoLink to={`/movies/${movieId}/reviews`} state={location.state}>\n          Reviews\n        </InfoLink>\n        <hr />\n        <Outlet />\n      </div>\n    </Container>\n  );\n};\n\nexport default MovieCard;\n","import axios from 'axios';\n\nconst API_KEY = '16c22f8b3f9ec467c6ea31f26412513d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async (id, page = 1) => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieSearch = async (query, page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["BackLink","styled","Link","Title","InfoLink","NavLink","useState","movie","setMovie","error","setError","isLoading","setIsLoading","location","useLocation","backLink","state","from","movieId","useParams","useEffect","fetchMovie","getMovieDetails","result","to","title","src","poster_path","alt","original_title","Date","release_date","getFullYear","popularity","overview","API_KEY","axios","END_POINTS","getMovies","page","response","data","results","id","getMovieCast","cast","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}