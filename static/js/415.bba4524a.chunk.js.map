{"version":3,"file":"static/js/415.bba4524a.chunk.js","mappings":"iNAGaA,EAAOC,EAAAA,GAAAA,GAAH,4HAQJC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,0H,SCUjB,EAjBkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAACP,EAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADC,OAUnB,C,kHCiBD,UA9Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAW,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,OAEVC,EAFU,OAGhBR,EAAUQ,GAHM,gDAKhBN,EAAS,EAAD,IALQ,yBAOhBE,GAAa,GAPG,4EAAH,qDAUjBE,GACD,GAAE,KAGD,UAAC,KAAD,YACE,SAAC,KAAD,8BACCH,GAAa,aACbF,IAAS,yBAAMA,IACfX,IAAU,SAAC,IAAD,CAAWA,OAAQA,MAGnC,C,8LChCKmB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHJ,EAAS,mCAAG,yGAAOK,EAAP,+BAAc,EAAd,SACAF,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BG,EAD7B,wCADA,cACjBC,EADiB,yBAIhBA,EAASC,KAAKC,SAJE,2CAAH,qDAOTC,EAAe,mCAAG,WAAMtB,GAAN,uFACNgB,EAAAA,EAAAA,IAAA,UAClBC,EADkB,YACSjB,EADT,oBACuBe,EADvB,oBADM,cACvBI,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAY,mCAAG,WAAMvB,GAAN,uFACHgB,EAAAA,EAAAA,IAAA,iBACXhB,GADW,OACNiB,EADM,oBAC6BF,EAD7B,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKI,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAOzB,GAAP,4FAAWkB,EAAX,+BAAkB,EAAlB,SACNF,EAAAA,EAAAA,IAAA,iBACXhB,GADW,OACNiB,EADM,oBAC6BF,EAD7B,gCAC4DG,IAFtD,cACvBC,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfK,EAAc,mCAAG,WAAOC,GAAP,4FAAcT,EAAd,+BAAqB,EAArB,SACLF,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACgBF,EADhB,iBACgCG,EADhC,kBAC8CS,EAD9C,wCADK,cACtBR,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qD","sources":["components/MovieList/MovieList.syled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Item = styled(Link)`\n  text-decoration: none;\n  color: #2a363b;\n\n  &:hover,\n  &:focus {\n    color: #2196f3;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { List, Item } from './MovieList.syled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Item to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Item>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { getMovies } from 'services/movies-api';\nimport MovieList from 'components/MovieList/MovieList';\n\nimport { Container, Title } from 'components/Layout/Layout.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchTrends = async () => {\n      try {\n        const result = await getMovies();\n        setMovies(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrends();\n  }, []);\n\n  return (\n    <Container>\n      <Title>Trending movies</Title>\n      {isLoading && 'Loading...'}\n      {error && <div>{error}</div>}\n      {movies && <MovieList movies={movies} />}\n    </Container>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '16c22f8b3f9ec467c6ea31f26412513d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async (id, page = 1) => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieSearch = async (query, page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","Item","Link","movies","location","useLocation","map","id","original_title","to","state","from","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","fetchTrends","getMovies","result","API_KEY","axios","END_POINTS","page","response","data","results","getMovieDetails","getMovieCast","cast","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}