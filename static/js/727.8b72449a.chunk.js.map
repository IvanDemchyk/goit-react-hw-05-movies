{"version":3,"file":"static/js/727.8b72449a.chunk.js","mappings":"6QAEaA,EAAWC,EAAAA,GAAAA,GAAH,4EAMRC,EAAWD,EAAAA,GAAAA,GAAH,iEAIRE,EAASF,EAAAA,GAAAA,IAAH,iJ,SCuCnB,EA7CqB,WACnB,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAS,mCAAG,8GAEOC,EAAAA,EAAAA,IAAaX,GAFpB,OAERY,EAFQ,OAGdR,EAAQQ,GAHM,gDAKdN,EAAS,EAAD,IALM,yBAOdE,GAAa,GAPC,4EAAH,qDAUfE,GACD,GAAE,CAACV,KAGF,gCACGO,GAAa,aACbF,IAAS,yBAAMA,KAChB,SAACT,EAAD,UACGO,EAAKU,KAAI,SAAAC,GACR,OACE,UAAChB,EAAD,YACE,gBACEiB,IAAG,yCAAoCD,EAASE,cAChDC,IAAG,UAAKH,EAASI,KAAd,gBAEL,UAACnB,EAAD,YACE,kCAAUe,EAASI,SACnB,kCAAUJ,EAASK,kBAPRL,EAASM,GAW3B,QAIR,C,8LC/CKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACAH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADA,cACjBC,EADiB,yBAIhBA,EAASC,KAAKC,SAJE,2CAAH,qDAOTC,EAAe,mCAAG,WAAMT,GAAN,uFACNE,EAAAA,EAAAA,IAAA,UAClBC,EADkB,YACSH,EADT,oBACuBC,EADvB,oBADM,cACvBK,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfhB,EAAY,mCAAG,WAAMS,GAAN,uFACHE,EAAAA,EAAAA,IAAA,iBACXF,GADW,OACNG,EADM,oBAC6BF,EAD7B,oBADG,cACpBK,EADoB,yBAInBA,EAASC,KAAKxB,MAJK,2CAAH,sDAOZ2B,EAAe,mCAAG,WAAOV,GAAP,4FAAWK,EAAX,+BAAkB,EAAlB,SACNH,EAAAA,EAAAA,IAAA,iBACXF,GADW,OACNG,EADM,oBAC6BF,EAD7B,gCAC4DI,IAFtD,cACvBC,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfG,EAAc,mCAAG,WAAOC,GAAP,4FAAcP,EAAd,+BAAqB,EAArB,SACLH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACgBF,EADhB,iBACgCI,EADhC,kBAC8CO,EAD9C,wCADK,cACtBN,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qD","sources":["components/MovieCredits/MovieCredits.styled.js","components/MovieCredits/MovieCredits.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 50px;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - 100px) / 3);\n`;\n\nexport const IdCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-weight: 500;\n  font-size: 16px;\n  padding-top: 8px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/movies-api';\n\nimport { CastList, CastItem, IdCard } from './MovieCredits.styled';\n\nconst MovieCredits = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchCast = async () => {\n      try {\n        const result = await getMovieCast(movieId);\n        setCast(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && 'Loading...'}\n      {error && <div>{error}</div>}\n      <CastList>\n        {cast.map(castItem => {\n          return (\n            <CastItem key={castItem.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w300${castItem.profile_path}`}\n                alt={`${castItem.name} portrait`}\n              />\n              <IdCard>\n                <p>Name: {castItem.name}</p>\n                <p>Role: {castItem.character}</p>\n              </IdCard>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    </>\n  );\n};\n\nexport default MovieCredits;\n","import axios from 'axios';\n\nconst API_KEY = '16c22f8b3f9ec467c6ea31f26412513d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async (id, page = 1) => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieSearch = async (query, page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["CastList","styled","CastItem","IdCard","movieId","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","fetchCast","getMovieCast","result","map","castItem","src","profile_path","alt","name","character","id","API_KEY","axios","END_POINTS","getMovies","page","response","data","results","getMovieDetails","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}