{"version":3,"file":"static/js/424.9661855a.chunk.js","mappings":"4QAEaA,EAAaC,EAAAA,GAAAA,GAAH,uGAOVC,EAAaD,EAAAA,GAAAA,GAAH,kF,SCoCvB,EAvCqB,WACnB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAY,mCAAG,8GAEIC,EAAAA,EAAAA,IAAgBX,GAFpB,OAEXY,EAFW,OAGjBR,EAAWQ,GAHM,gDAKjBN,EAAS,EAAD,IALS,yBAOjBE,GAAa,GAPI,4EAAH,qDAUlBE,GACD,GAAE,CAACV,KAGF,gCACGO,GAAa,aACbF,IAAS,yBAAMA,KAChB,SAACR,EAAD,UACGM,EAAQU,KAAI,SAAAC,GACX,OACE,UAACf,EAAD,YACE,oCAAYe,EAAOC,WACnB,uBAAID,EAAOE,YAFIF,EAAOG,GAK3B,QAIR,C,8LCzCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACAH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADA,cACjBC,EADiB,yBAIhBA,EAASC,KAAKC,SAJE,2CAAH,qDAOTC,EAAe,mCAAG,WAAMT,GAAN,uFACNE,EAAAA,EAAAA,IAAA,UAClBC,EADkB,YACSH,EADT,oBACuBC,EADvB,oBADM,cACvBK,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAY,mCAAG,WAAMV,GAAN,uFACHE,EAAAA,EAAAA,IAAA,iBACXF,GADW,OACNG,EADM,oBAC6BF,EAD7B,oBADG,cACpBK,EADoB,yBAInBA,EAASC,KAAKI,MAJK,2CAAH,sDAOZjB,EAAe,mCAAG,WAAOM,GAAP,4FAAWK,EAAX,+BAAkB,EAAlB,SACNH,EAAAA,EAAAA,IAAA,iBACXF,GADW,OACNG,EADM,oBAC6BF,EAD7B,gCAC4DI,IAFtD,cACvBC,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfI,EAAc,mCAAG,WAAOC,GAAP,4FAAcR,EAAd,+BAAqB,EAArB,SACLH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACgBF,EADhB,iBACgCI,EADhC,kBAC8CQ,EAD9C,wCADK,cACtBP,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qD","sources":["components/MovieReviews/MovieReviews.styled.js","components/MovieReviews/MovieReviews.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n`;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movies-api';\n\nimport { ReviewList, ReviewItem } from './MovieReviews.styled';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchReviews = async () => {\n      try {\n        const result = await getMovieReviews(movieId);\n        setReviews(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && 'Loading...'}\n      {error && <div>{error}</div>}\n      <ReviewList>\n        {reviews.map(review => {\n          return (\n            <ReviewItem key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </ReviewItem>\n          );\n        })}\n      </ReviewList>\n    </>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst API_KEY = '16c22f8b3f9ec467c6ea31f26412513d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async (id, page = 1) => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieSearch = async (query, page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["ReviewList","styled","ReviewItem","movieId","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","fetchReviews","getMovieReviews","result","map","review","author","content","id","API_KEY","axios","END_POINTS","getMovies","page","response","data","results","getMovieDetails","getMovieCast","cast","getMovieSearch","query"],"sourceRoot":""}