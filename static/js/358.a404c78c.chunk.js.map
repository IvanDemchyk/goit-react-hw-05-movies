{"version":3,"file":"static/js/358.a404c78c.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.syled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/MovieSearch.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Item = styled(Link)`\n  text-decoration: none;\n  color: #2a363b;\n\n  &:hover,\n  &:focus {\n    color: #2196f3;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { List, Item } from './MovieList.syled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Item to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Item>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  border-radius: 20px;\n  font-weight: 600;\n\n  padding: 10px 20px;\n  background-color: #2caf51;\n  color: #2a363b;\n  border: 1px solid #02121beb;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #2196f3;\n  }\n  &:focus {\n    background-color: #2196f3;\n  }\n`;\n","import { useState } from 'react';\n\nimport { Form, FormInput, Button } from './SearchBar.styled';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchQuery = evt => {\n    setSearchQuery(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleSearchQuery}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { getMovieSearch } from 'services/movies-api';\n\nimport { Container, Title } from 'components/Layout/Layout.styled';\n\nconst MovieSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    setIsLoading(true);\n    const fetchMovie = async () => {\n      try {\n        const result = await getMovieSearch(searchRequest);\n        if (!result.length) {\n          alert('No movies found!');\n        }\n        setMovies(result);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  const onSubmit = value => {\n    setSearchParams({ query: `${value}` });\n  };\n\n  return (\n    <Container>\n      <Title>Movie Search</Title>\n      {isLoading && 'Loading...'}\n      {error && <div>{error}</div>}\n      <SearchBar onSearch={onSubmit} />\n      {movies && <MovieList movies={movies} />}\n    </Container>\n  );\n};\n\nexport default MovieSearch;\n","import axios from 'axios';\n\nconst API_KEY = '16c22f8b3f9ec467c6ea31f26412513d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async (id, page = 1) => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieSearch = async (query, page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","Item","Link","movies","location","useLocation","map","id","original_title","to","state","from","Form","FormInput","Button","onSearch","useState","searchQuery","setSearchQuery","onSubmit","evt","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","isLoading","setIsLoading","searchRequest","get","useEffect","fetchMovie","getMovieSearch","result","length","query","MovieList","API_KEY","axios","END_POINTS","getMovies","page","response","data","results","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}